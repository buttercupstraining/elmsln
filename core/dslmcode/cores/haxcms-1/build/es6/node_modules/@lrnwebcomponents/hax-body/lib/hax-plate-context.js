import{SimpleTourFinder as t}from"../../simple-popover/lib/SimpleTourFinder.js";import{HAXStore as e}from"./hax-store.js";import"./hax-context-item-menu.js";import"./hax-context-item.js";import{autorun as n,toJS as a}from"../../../mobx/dist/mobx.esm.js";class HaxPlateContext extends(t(HTMLElement)){constructor(t=!1){super(),this.haxUIElement=!0,this.tourName="hax",this.tag=HaxPlateContext.tag,this.template=document.createElement("template"),this.attachShadow({mode:"open"}),t||this.render(),n(()=>{const t=a(e.activeNode);t&&this.getAttribute("on-screen")&&this.__updatePlatePosition(t)}),n(()=>{a(e.activeEditingElement)?this.hasActiveEditingElement=!0:this.hasActiveEditingElement=!1,this.render()})}static get tag(){return"hax-plate-context"}get html(){return`\n    <style>\n    :host {\n      display: block;\n      margin-top: -2px;\n      background-color:white;\n    }\n    hax-context-item {\n      display: block;\n    }\n    hax-context-item[large] {\n      display: inline-block;\n      margin:0;\n      padding:0;\n    }\n    hax-context-item-menu {\n      --hax-context-item-menu-height: 28px;\n    }\n    .area {\n      display: flex;\n      visibility: visible;\n      opacity: .8;\n      transition: .2s all ease-in-out;\n    }\n    .area:hover {\n      opacity: 1;\n    }\n    button {\n      background-color: var(--hax-contextual-action-color);\n      -webkit-justify-content: flex-start;\n      justify-content: flex-start;\n      height: 24px;\n      padding: 0 4px;\n      min-height: 24px;\n      font-size: 10px;\n      color: white;\n    }\n    #drag hax-context-item:hover,\n    button:hover {\n      cursor: pointer;\n      color: black;\n    }\n    simple-icon {\n      padding: 0 2px;\n      --simple-icon-height: 16px;\n      --simple-icon-width: 16px;\n    }\n    :host(.hax-context-pin-top) .area {\n      position: fixed;\n      top: 28px;\n      margin-left: -2px;\n      flex-direction: column;\n    }\n    </style>\n    <div class="area" id="area">\n      <hax-context-item-menu\n        mini\n        ${this.hasActiveEditingElement?"disabled":""}\n        id="drag"\n        action\n        icon="hax:arrow-all"\n        label="Drag handle"\n        draggable="true"\n        selected-value="0"\n        reset-on-select\n        data-simple-tour-stop\n        data-stop-title="label">\n        <hax-context-item\n          action\n          mini\n          dark\n          ${this.hasActiveEditingElement?"disabled":""}\n          simple\n          icon="hax:keyboard-arrow-up"\n          label="Move up"\n          event-name="hax-plate-up"\n          direction="left"\n          ></hax-context-item>\n        <hax-context-item\n          action\n          mini\n          dark\n          ${this.hasActiveEditingElement?"disabled":""}\n          simple\n          icon="hax:keyboard-arrow-down"\n          label="Move down"\n          event-name="hax-plate-down"\n          direction="left"\n          ></hax-context-item>\n        <div slot="tour" data-stop-content>\n          Click the drag handle once to show a menu to just move\n          up or down one item in the content OR click and drag\n          to place the item exactly where you want it to go.\n        </div>\n      </hax-context-item-menu>\n      <hax-context-item\n        mini\n        action\n        id="right"\n        class="paddle"\n        icon="hax:table-column-remove"\n        label="Add column"\n        ${this.hasActiveEditingElement?"disabled":""}\n        event-name="hax-plate-create-right"\n        data-simple-tour-stop\n        data-stop-title="label"\n      >\n      <div slot="tour" data-stop-content>\n      Add a column to split the current column into two pieces. This can be done up to\n      six pieces columns. For differnet layouts see Grid settings panel.\n      </div>\n    </hax-context-item>\n    <hax-context-item\n      mini\n      action\n      class="paddle"\n      icon="hax:table-column-plus-after"\n      label="Remove column"\n      ${this.hasActiveEditingElement?"disabled":""}\n      event-name="hax-plate-remove-right"\n      id="rightremove"\n      data-simple-tour-stop\n      data-stop-title="label"\n    >\n    <div slot="tour" data-stop-content>\n      Remove a column from the split column layout. If at two columns and removing it will\n      remove the layout split and make it 100% width.\n    </div>\n    </hax-context-item>\n  <hax-context-item\n    mini\n    action\n    ${this.hasActiveEditingElement?"disabled":""}\n    label="Duplicate"\n    icon="icons:content-copy"\n    event-name="hax-plate-duplicate"\n    data-simple-tour-stop\n    data-stop-title="label"\n    >\n    <div slot="tour" data-stop-content>\n      Duplicate the active piece of content and place it below the current item.\n    </div>\n    </hax-context-item>\n  <hax-context-item\n    mini\n    danger\n    action\n    ${this.hasActiveEditingElement?"disabled":""}\n    icon="delete"\n    label="Remove"\n    event-name="hax-plate-delete"\n    data-simple-tour-stop\n    data-stop-title="label"\n  >\n  <div slot="tour" data-stop-content>\n      Delete the current item. You can always use the undo arrow to bring this back.\n    </div>\n  </hax-context-item>\n  </div>\n  `}__updatePlatePosition(t){let e=this.shadowRoot.querySelector("#right"),n=this.shadowRoot.querySelector("#rightremove");e.disabled=!1,n.disabled=!1,t&&"GRID-PLATE"==t.tagName?"1-1-1-1-1-1"==t.layout&&(e.disabled=!0):n.disabled=!0}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}connectedCallback(){super.connectedCallback(),this.shadowRoot.querySelector("#drag").addEventListener("dragstart",this._dragStart),this.shadowRoot.querySelector("#drag").addEventListener("dragend",this._dragEnd)}disconnectedCallback(){this.shadowRoot.querySelector("#drag").removeEventListener("dragstart",this._dragStart),this.shadowRoot.querySelector("#drag").removeEventListener("dragend",this._dragEnd),super.disconnectedCallback()}_dragEnd(t){e._lockContextPosition=!1}_dragStart(t){let n=a(e.activeNode);e.__dragTarget=n,e._lockContextPosition=!0,e.activeHaxBody.__activeHover=null,e.activeHaxBody._hideContextMenu(e.activeHaxBody.contextMenus.add),t.dataTransfer&&(t.dataTransfer.effectAllowed="move",t.dataTransfer.dropEffect="move",t.dataTransfer.setDragImage(n,-20,-20)),t.stopPropagation(),t.stopImmediatePropagation()}}window.customElements.define(HaxPlateContext.tag,HaxPlateContext);export{HaxPlateContext};