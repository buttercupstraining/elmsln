import{LitElement as t,html as e,css as a}from"../../../lit-element/lit-element.js";import{HAXStore as i}from"./hax-store.js";import"./hax-context-item.js";import"./hax-toolbar.js";import{autorun as o,toJS as s}from"../../../mobx/dist/mobx.esm.js";class HaxCeContext extends t{static get styles(){return[a`
        :host {
          display: block;
        }
        hax-context-item {
          margin: 0;
        }
        :host(.hax-context-pin-top) hax-toolbar {
          position: fixed;
          top: 0px;
          flex-direction: column;
        }
      `]}constructor(){super(),this.haxUIElement=!0,this.activeTagName="",this.activeTagIcon="hax:paragraph"}updated(t){t.forEach((t,e)=>{"onScreen"===e&&this.onScreen&&this._computeValues()})}render(){return e`
      <hax-toolbar hide-more>
        <hax-context-item
          mini
          action
          more
          slot="prefix"
          icon="${this.activeTagIcon}"
          label="${this.activeTagName}, click to change"
          ?disabled="${this.disableTransform}"
          event-name="hax-transform-node"
        ></hax-context-item>
        <slot slot="primary"></slot>
      </hax-toolbar>
    `}static get tag(){return"hax-ce-context"}static get properties(){return{disableTransform:{type:Boolean},onScreen:{type:Boolean,attribute:"on-screen",reflect:!0},activeTagIcon:{type:String},activeTagName:{type:String}}}firstUpdated(){o(()=>{this.activeNode=s(i.activeNode),this.activeNode&&this.activeNode.classList&&this._computeValues()})}_computeValues(){i.activeHaxBody&&null!=this.activeNode?i.isTextElement(this.activeNode)||("GRID-PLATE"==this.activeNode.tagName?(this.disableTransform=!0,this.activeTagName="Grid",this.activeTagIcon="hax:3-3-3-3"):(this.disableTransform=!i.activeHaxBody.canTansformNode(this.activeNode),i.activeGizmo&&(this.activeTagName=i.activeGizmo.title,this.activeTagIcon=i.activeGizmo.icon))):(this.activeTagName="",this.activeTagIcon="hax:paragraph")}}window.customElements.define(HaxCeContext.tag,HaxCeContext);export{HaxCeContext};