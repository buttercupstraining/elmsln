define(["exports", "../../../lit-element/lit-element.js", "../../simple-colors/simple-colors.js", "./simple-icon-button-lite.js", "./simple-icons.js", "../simple-icon.js"], function (_exports, _litElement, _simpleColors, _simpleIconButtonLite, _simpleIcons, _simpleIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleIconButton = void 0;

  /**
   * Copyright 2020 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `simple-icon`
   * `Render an SVG based icon`
   *
   * @microcopy - language worth noting:
   *  -
   *
   * @demo demo/button.html
   * @element simple-icon
   */
  class SimpleIconButton extends (0, _simpleIconButtonLite.SimpleIconButtonBehaviors)(_simpleColors.SimpleColors) {
    /**
     * This is a convention, not the standard
     */
    static get tag() {
      return "simple-icon-button";
    }

    constructor() {
      super();
      this.accentColor = "grey";
      this.contrast = 4;
      this.dark = false;
    } // render function


    render() {
      return (0, _litElement.html)`
      <button>
        <simple-icon
          icon="${this.icon}"
          accent-color="${this.accentColor}"
          contrast="${this.contrast}"
          ?dark="${this.dark}"
        ></simple-icon>
      </button>
    `;
    } // properties available to the custom element for data binding


    static get properties() {
      return { ...super.properties,
        contrast: {
          type: Number,
          reflect: true
        }
      };
    }

  }

  _exports.SimpleIconButton = SimpleIconButton;
  customElements.define(SimpleIconButton.tag, SimpleIconButton);
});